apiVersion: apps/v1
kind: Deployment
metadata:
  name: scraping-service
spec:
  replicas: 1  # Adjust based on resource availability and high availability requirements
  selector:
    matchLabels:
      app: scraping-service
  template:
    metadata:
      labels:
        app: scraping-service
    spec:
      containers:
      - name: scraper
        image: scraping-service:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"  # Define CPU request based on pod's resource needs
            memory: "64Mi"  # Define memory request based on pod's resource needs
          limits:
            cpu: "200m"  # Define CPU limit based on pod's maximum resource usage
            memory: "1000Mi"  # Define memory limit based on pod's maximum resource usage
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          failureThreshold: 6
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - web-crawler
            topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - web-crawler
            topologyKey: "kubernetes.io/hostname"
      nodeSelector:
        yourNodeLabelKey: scraping-server

